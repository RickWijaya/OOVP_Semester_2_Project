/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oovp.project;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.xml.crypto.Data;
import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rikiw
 */
public class MainAPP extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet res = null;
    PreparedStatement prepStatement = null;
    Statement statement;
    Boolean exists = false;

    /**
     * Creates new form MainAPP
     */
    public MainAPP() {
        initComponents();
        connect();
        display();
    }

    private void connect() {
    try {
        Class.forName("com.mysql.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/oovpjavaproject";
        String username = "root";
        String password = "";
        conn = DriverManager.getConnection(url, username, password);
        statement = conn.createStatement(res.TYPE_SCROLL_SENSITIVE, res.CONCUR_UPDATABLE);
        String query = "SELECT student.id, student.name, gpa, enrollment_date, major.name AS major " +
               "FROM student " +
               "JOIN major ON student.major_id = major.id " +
               "ORDER BY student.id";

        res = statement.executeQuery(query);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
        System.exit(0);
    }
}


    private void display() {
    try {
        String query = "SELECT student.id, student.name, gpa, enrollment_date, major.name AS major " +
               "FROM student " +
               "JOIN major ON student.major_id = major.id " +
               "ORDER BY student.id";

        prepStatement = conn.prepareStatement(query);
        res = prepStatement.executeQuery();
        tableStudent.setModel(DbUtils.resultSetToTableModel(res));
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}


    private void clear() {
        textID.setText(null);
        textName.setText(null);
        textED.setText(null);
        textGPA.setText(null);
        MajorBox.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        Title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textID = new javax.swing.JTextField();
        textName = new javax.swing.JTextField();
        textED = new javax.swing.JTextField();
        textGPA = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStudent = new javax.swing.JTable();
        clearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        textSearch = new javax.swing.JTextField();
        MajorBox = new javax.swing.JComboBox<>();
        SearchMajorBox = new javax.swing.JComboBox<>();
        resetID = new javax.swing.JButton();
        resetName = new javax.swing.JButton();
        resetED = new javax.swing.JButton();
        resetGPA = new javax.swing.JButton();
        resetMajor = new javax.swing.JButton();

        jButton5.setText("jButton5");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setText("Student Management System");

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        jLabel3.setText("GPA");

        jLabel4.setText("Enrollment Date");

        jLabel5.setText("Major");

        textID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIDActionPerformed(evt);
            }
        });

        textED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textEDActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        tableStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "GPA", "Enrollment Date", "Major"
            }
        ));
        tableStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStudentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableStudent);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        textSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchActionPerformed(evt);
            }
        });

        MajorBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer Science", "Information Systems", "Software Engineering", "Data Science", "Cyber Security", "Artificial Intelligence", "Information Technology", "Digital Media", "Game Development", "Business Informatics" }));

        SearchMajorBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Computer Science", "Information Systems", "Software Engineering", "Data Science", "Cyber Security", "Artificial Intelligence", "Information Technology", "Digital Media", "Game Development", "Business Informatics" }));
        SearchMajorBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchMajorBoxActionPerformed(evt);
            }
        });
        SearchMajorBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SearchMajorBoxPropertyChange(evt);
            }
        });

        resetID.setText("Reset");
        resetID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetIDActionPerformed(evt);
            }
        });

        resetName.setText("Reset");
        resetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetNameActionPerformed(evt);
            }
        });

        resetED.setText("Reset");
        resetED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetEDActionPerformed(evt);
            }
        });

        resetGPA.setText("Reset");
        resetGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetGPAActionPerformed(evt);
            }
        });

        resetMajor.setText("Reset");
        resetMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMajorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(399, 399, 399))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textName)
                                            .addComponent(textID))
                                        .addGap(6, 6, 6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resetID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resetName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(Title, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(textGPA))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MajorBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resetMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resetED, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resetGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(textSearch))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SearchMajorBox, 0, 1, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(searchButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(resetID))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(resetName))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(resetGPA))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(resetED))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(MajorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetMajor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(updateButton)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(clearButton)
                    .addComponent(exitButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchMajorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        try {
            connect();
            statement = conn.createStatement();
            String name = textName.getText();
            int id = Integer.parseInt(textID.getText());
            if(id < 0){
              JOptionPane.showMessageDialog(null, "Input Valid ID!");
                return;  
            }
            Float gpa = Float.parseFloat(textGPA.getText());
            if(gpa < 0 || gpa > 4){
              JOptionPane.showMessageDialog(null, "Input Valid GPA from 0 to 4!");
                return;  
            }
            int major = MajorBox.getSelectedIndex() + 1;
            String enrollment_date = textED.getText();
            if (name.equals("")|| enrollment_date.equals("")) {
                JOptionPane.showMessageDialog(null, "Missing required field!");
                return;
            }
            String sql = "INSERT INTO student (id, name, gpa, enrollment_date, major_id) VALUES ('"
                    + id + "', '" + name + "', '" + gpa + "', '" + enrollment_date + "', '" + major + "')";
            statement.executeUpdate(sql);
            display();
            statement.close();
            conn.close();
            clear();
            JOptionPane.showMessageDialog(null, "Add Success");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void textIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIDActionPerformed

    private void textEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textEDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textEDActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            connect();
            statement = conn.createStatement();
            String name = textName.getText();
            int major = MajorBox.getSelectedIndex() + 1;
            int id = Integer.parseInt(textID.getText());
            if(id < 0){
              JOptionPane.showMessageDialog(null, "Input Valid ID!");
                return;  
            }
            Float gpa = Float.parseFloat(textGPA.getText());
            if(gpa < 0 || gpa > 4){
              JOptionPane.showMessageDialog(null, "Input Valid GPA from 0 to 4!");
                return;  
            }
            String ED = textED.getText();
            if (name.equals("")) {
                JOptionPane.showMessageDialog(null, "Missing required field!");
                return;
            }
            String sql = "UPDATE student SET name = '" + name
                    + "', major_id = '" + major + "', enrollment_date = '" + ED +"', gpa = '" + gpa
                    + "' WHERE id = '" + id + "'";

            statement.executeUpdate(sql);
            display();
            statement.close();
            conn.close();
            clear();
            JOptionPane.showMessageDialog(null, "Edit Success");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            connect();
            statement = conn.createStatement();
            String id = textID.getText();
            if (id.equals("")) {
                JOptionPane.showMessageDialog(null, "Please insert ID to delete!");
                return;
            }
            String sql = "DELETE FROM student WHERE id = '" + id + "'";
            statement.executeUpdate(sql);
            display();
            statement.close();
            conn.close();
            clear();
            JOptionPane.showMessageDialog(null, "Delete Success");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        display();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void tableStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStudentMouseClicked
        try {
        connect();
        int row = tableStudent.getSelectedRow();
        String clickedRow = tableStudent.getModel().getValueAt(row, 0).toString();

        String sql = "SELECT student.*, major.name AS major_name " +
                     "FROM student " +
                     "JOIN major ON student.major_id = major.id " +
                     "WHERE student.id = '" + clickedRow + "'";
        Statement stm = conn.createStatement();
        ResultSet result = stm.executeQuery(sql);

        if (result.next()) {
            String id = result.getString("id");
            textID.setText(id);

            String name = result.getString("name");
            textName.setText(name);

            String gpa = result.getString("gpa");
            textGPA.setText(gpa);

            String enrollmentDate = result.getString("enrollment_date");
            textED.setText(enrollmentDate);

            // Get major name and set it in the combo box
            String majorName = result.getString("major_name");
            MajorBox.setSelectedItem(majorName);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
    }//GEN-LAST:event_tableStudentMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchInput = textSearch.getText().trim();
    int searchMajorIndex = SearchMajorBox.getSelectedIndex();
    String sql = "";
    textSearch.setText("");
    SearchMajorBox.setSelectedIndex(0);
    try {
        boolean isNumeric = false;
        try {
            Integer.parseInt(searchInput);
            isNumeric = true;
        } catch (NumberFormatException e) {
            isNumeric = false;
        }
        
        sql = "SELECT student.id, student.name, student.gpa, student.enrollment_date, major.name AS major " +
              "FROM student " +
              "JOIN major ON student.major_id = major.id ";
        
        List<String> conditions = new ArrayList<>();

        if (!searchInput.isEmpty()) {
            if (isNumeric) {
                conditions.add("student.id = " + searchInput);
            } else {
                // Use prepared statement parameter to prevent SQL injection
                conditions.add("student.name LIKE '%" + searchInput + "%'");
            }
        }

        if (searchMajorIndex > 0) {
            conditions.add("student.major_id = " + searchMajorIndex);
        }

        // Add conditions to SQL
        if (!conditions.isEmpty()) {
            sql += "WHERE " + String.join(" AND ", conditions);
        }

        Statement stmt = conn.createStatement();
        ResultSet res = stmt.executeQuery(sql);
        tableStudent.setModel(DbUtils.resultSetToTableModel(res));
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void textSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchActionPerformed

    private void SearchMajorBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SearchMajorBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchMajorBoxPropertyChange

    private void SearchMajorBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMajorBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchMajorBoxActionPerformed

    private void resetMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMajorActionPerformed
        // TODO add your handling code here:
        MajorBox.setSelectedIndex(0);
    }//GEN-LAST:event_resetMajorActionPerformed

    private void resetEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetEDActionPerformed
        // TODO add your handling code here:
        textED.setText(null);
    }//GEN-LAST:event_resetEDActionPerformed

    private void resetGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetGPAActionPerformed
        // TODO add your handling code here:
        textGPA.setText(null);
    }//GEN-LAST:event_resetGPAActionPerformed

    private void resetIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetIDActionPerformed
        // TODO add your handling code here:
        textID.setText(null);
    }//GEN-LAST:event_resetIDActionPerformed

    private void resetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetNameActionPerformed
        // TODO add your handling code here:
        textName.setText(null);
    }//GEN-LAST:event_resetNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MajorBox;
    private javax.swing.JComboBox<String> SearchMajorBox;
    private javax.swing.JLabel Title;
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton resetED;
    private javax.swing.JButton resetGPA;
    private javax.swing.JButton resetID;
    private javax.swing.JButton resetMajor;
    private javax.swing.JButton resetName;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable tableStudent;
    private javax.swing.JTextField textED;
    private javax.swing.JTextField textGPA;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textSearch;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
